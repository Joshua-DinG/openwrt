#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#

name: OpenWRT-X86  #设备名请用大写字母

on:
  #schedule:
    #- cron: 0 22 */2 * *

  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/X86.config
  DIY_P1_SH: bash/diy_script01.sh
  DIY_P2_SH: bash/diy_script02.sh
  COMMIT_LOG_NUM: 1
  DEVICE_NAME: X86
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  RECENT_LASTEST: 15
  TZ: Asia/Shanghai

permissions: write-all

jobs:
  build_openwrt:
    name: Build Firmware
    runs-on: ubuntu-latest
    steps:
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install $(curl -fsSL https://github.com/Joshua-DinG/openwrt/raw/main/depends-ubuntu)
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "$TZ"

      - name: Checkout OpenWRT
        uses: actions/checkout@v3

      - name: Clone LEDE Code
        run: |
          git clone --depth=1 --single-branch $REPO_URL


      - name: Update Feeds01
        run:  cd ./lede && ./scripts/feeds update -a

      - name: Update Feeds
        run:  cd ./lede && ./scripts/feeds install -a

      #- name: Update Plugins
        #run: chmod +x $DIY_P2_SH; cd ./lede; $GITHUB_WORKSPACE/$DIY_P2_SH
        
      - name: Custom Settings
        run: |
          cd ./lede

          rm -rf ./tmp && rm -rf ./.config* && ls -lA
          cat $GITHUB_WORKSPACE/config/X86.config > .config

          make defconfig && ls -lA && cat .config

      - name: Download Packages
        run: |
          cd ./lede

          make download -j16

      - name: Compile Firmware
        run: |
          cd ./lede

          make -j$(nproc) || make -j1 V=s

          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./build_dir
          echo "======================="
          du -h --max-depth=1 ./bin
          echo "======================="

      - name: Package Firmware
        run: |
          export BUILD_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "DEVICE_NAME=$DEVICE_NAME" >> $GITHUB_ENV

          cd ./lede
          cp -rf $(find ./bin/targets/ -type f -iname "*$DEVICE_NAME*.*") ./bin/targets/
          cp -rf ./.config ./bin/targets/config.txt

          cd ./bin/targets
          zip -pmq "$DEVICE_NAME"_Firmware_"$BUILD_DATE".zip *.*

      - name: Release Firmware
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.DEVICE_NAME}}_Firmware_${{env.BUILD_DATE}}
          files: ./lede/bin/targets/*.zip
          body: |
            不要问，更就完事了！
            地址：192.168.2.1
            密码：password

      - name: Delete Old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 3
          delete_tags: true

      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3
