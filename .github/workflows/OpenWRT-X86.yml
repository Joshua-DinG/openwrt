#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#

name: OpenWRT-X86

on:
  #repository_dispatch:
  workflow_dispatch:
    #inputs:
      #ssh:
        #description: 'SSH connection to Actions'
        #required: false
        #default: 'false'

  push:
    branches: [main]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/X86.config
  DIY_P1_SH: bash/diy_script01.sh
  DIY_P2_SH: bash/diy_script02.sh
  COMMIT_LOG_NUM: 1
  RELEASE_TAG: X86
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  SERVERCHAN_SCKEY: true
  TZ: Asia/Shanghai

permissions: write-all

jobs:
  build_openwrt:
    name: Build R4S Firmware
    runs-on: ubuntu-latest
    steps:
      - name: 开始安装编译所需系统 #Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install $(curl -fsSL https://github.com/Joshua-DinG/openwrt/raw/main/depends-ubuntu)
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "$TZ"
          #sudo mkdir -p /workdir
          #sudo chown $USER:$GROUPS /workdir

      - name: 检查准备 #Checkout OpenWRT
        uses: actions/checkout@v3

      - name: 下载固件源码 #Clone Source Code
        #working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
          #ln -sf /workdir/lede $GITHUB_WORKSPACE/lede

      - name: 自定义配置01
        run: |
          chmod +x $DIY_P1_SH
          cd lede       
          $GITHUB_WORKSPACE/$DIY_P1_SH   

      - name: 更新安装源 #Update Feeds
        run: |
          cd ./lede

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 自定义配置02
        run: |
          chmod +x $DIY_P2_SH
          cd lede       
          $GITHUB_WORKSPACE/$DIY_P2_SH   

      - name: 自定义配置 #Create Configuration File
        run: |
          cd ./lede

          rm -rf ./tmp && rm -rf ./.config*
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config

          make defconfig

      - name: 下载软件包 #Download Packages
        run: |
          cd ./lede

          make download -j16

      - name: 开始编译固件 #Compile Firmware
        run: |
          cd ./lede

          make -j$(nproc) || make -j1 V=s

          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./build_dir
          echo "======================="
          du -h --max-depth=1 ./bin
          echo "======================="
          pwd

      - name: 包固件 #Package Firmware
        run: |
          export BUILD_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

          cd ./lede
          cp -rf $(find ./bin/targets/ -type f -name '*.img.gz') ./bin/targets/
          cp -rf ./.config ./bin/targets/config.txt

          cd ./bin/targets
          zip -pmq R4S_Firmware_$BUILD_DATE.zip *.*

      - name: 发布固件 #Release Firmware
        uses: softprops/action-gh-release@v1
        with:
          tag_name: R4S_Firmware_${{env.BUILD_DATE}}
          files: ./lede/bin/targets/*.zip
          body: |
            This is OpenWrt firmware for ${{ env.DEVICE_NAME }}
            * Firmware information
            Default IP: 192.168.10.1
            Default username: root
            Default password: password
            Default WIFI name: OpenWrt
            Default WIFI password: none
            [WETRANSFER](${{ env.WET_URL }})

      - name: 删除旧版本 #Delete Old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 3
          delete_tags: true

      - name: 删除旧工作流程 #Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3
